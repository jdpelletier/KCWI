#!/usr/bin/csh -f
#+
# KCWI library of scripts
#
# NAME
#	round -- round one or more floating point values to nearest integer
#
# SYNOPSIS
#	round value1 [value2 .. valueN]
#
# DESCRIPTION
#	Given one or more floating point values, compute and return the 
#	nearest integer using awk.
#
# ARGUMENTS
#	valueN: floating-point data values (e.g., 1.234 or -1.234 or + 1.234)
# 
# OPTIONS
#	None
#
# OUTPUT
#	Resulting values are returned on STDOUT
#
# EXAMPLES
#	1) Round off the value 1.987:
#		> round 1.987
#		2
#
#	2) Round off a series of values:
#		> round 1.987 -2.987 +3.987
#		2 -3 4
#-
# Modification history:
#	2012-apr-03	GDW	Original version
#-----------------------------------------------------------------------

# check arguments
set cmd = `basename $0`
set usage = "Usage: $cmd value1 [value2 .. valueN]"

# check for no args...
if ($#argv == 0) then
  echo $usage
  exit 1
endif

# check for floats...
is_float $* >& /dev/null
if ( $status != 0 ) then
    printf "ERROR: one or more values are non-numeric -- abort!\n\a"
    exit 1
endif

# run results through awk...
foreach i ($*) 
    echo $i | \
	awk '{printf("%d ",round($1))} \
		function round(num,places, sign) { \
		# Rounds to /places/ decimal points - if /places/ not supplied it is \
		# treated as 1, also can supply negative /places/ \
		places=10^places \
		sign=1 \
		if (num < 0) {sign = -1; num = -num;} \
		return sign * int(num*places + .5)/places \
		}'
end
printf "\n"

